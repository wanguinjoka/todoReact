{"version":3,"sources":["components/Todoitem.js","components/Todos.js","components/layout/header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["Todoitem","getStyle","background","padding","borderBottom","textDecoration","_this","props","todo","completed","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","components_Todoitem","key","headerStyle","textAlign","linkSyle","Header","react_router_dom","to","AddTodo","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","value","inherits","createClass","display","placeholder","flex","className","About","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","header","react_router","exact","path","render","Fragment","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e9362da.chunk.js","sourcesContent":["import React,{Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Todoitem extends Component    {\n    getStyle = ()=> {\n        return {\n            background: '#4B9BB9',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ?\n            'line-through': 'none'\n        }\n    }\n    \n    render(){\n        const { id, title } = this.props.todo;\n        return(\n           <div style = {this.getStyle()}>\n           \n               <p>\n                   <input type=\"checkbox\" \n                   onChange ={this.props.markComplete.bind(this,id)} />{' '}\n                    {title}\n                    <button onClick={this.props.delTodo.bind(this,id)} style = { btnStyle}>x</button>\n                \n                    \n                </p>\n    \n           </div> \n        )\n    }\n}\n//PropTypes\nTodoitem.propTypes = {\n    todo: PropTypes.object.isRequired\n  }\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    borderRadius: '50%',\n    cursor:'pointer',\n    float: 'right'\n}\n\nexport default Todoitem","import React,{Component} from 'react';\nimport Todoitem from './Todoitem';\nimport PropTypes from 'prop-types';\n\n\nclass Todos extends Component {\n  render(){\n    \n  return this.props.todos.map((todo) => (\n    <Todoitem key = {todo.id} todo={todo} \n    markComplete ={this.props.markComplete}\n    delTodo={this.props.delTodo}/>\n  )\n);\n}\n}\n// PropTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired\n}\n\n\n\nexport default Todos;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header(){\n    return(\n        <header style={headerStyle}>\n            <h1> To Do list</h1>\n            <Link style={linkSyle}to=\"/\"> Home</Link>|\n            <Link style={linkSyle} to=\"/about\">About</Link>\n            </header>\n    )\n}\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n}\n\nconst linkSyle = {\n    color: '#fff',\n    textDecoration: 'none',\n    padding: '5px'\n}\n\nexport default Header;\n","import React, { Component} from 'react';\n\nexport class AddTodo extends Component {\n    state = {\n        title: ''\n    }\n    onSubmit = (e) =>{\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({ title:''});\n    }\n\n    onChange = (e) => \n           this.setState({[ e.target.name]:e.target.value});\n\n\n    render(){\n        return(\n            <div>\n               <form onSubmit={this.onSubmit} style={{display: 'flex'}}>\n                   <input \n                        type=\"text\" \n                        name=\"title\" \n                        placeholder=\"Add To do item\" \n                        style={{flex:'10', padding: '5px'}}\n                        value = {this.state.title}\n                        onChange={this.onChange}\n                    />\n                <input type=\"submit\" value=\"submit\" className=\"btn\" style={{flex:'1'}}/>\n                \n                </form>\n            </div>\n        )\n    }\n}\nexport default AddTodo ;\n","import React from 'react';\n\nfunction About(){\n  return(\n      <div>\n       <h1>About</h1>\n       <p>Learning React by building a to do list app</p>\n      </div>\n\n  )\n}\n\nexport default About;","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport axios from 'axios';\n//import uuid from 'uuid';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n  this.state = {\n    todos: []\n  }\n}\n\ncomponentDidMount(){\n  axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n  .then(res => this.setState({todos: res.data }))\n}\n\n\n//Task completed mark\nmarkComplete = (id) =>{\n  this.setState({todos:this.state.todos.map(todo =>{\n    if(todo.id=== id){\n      todo.completed = !todo.completed\n    }\n    return todo;\n  })});\n}\n// delete tasks\ndelTodo = (id)=>{\n  axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n  .then(res => this.setState({todos: [...this.state.todos.filter(todo => todo.id !== id)]}));\n}\n\n//Add Todo\naddTodo = (title) => {\n  axios.post('https://jsonplaceholder.typicode.com/todos', {\n    title,\n    completed: false\n  })\n  .then(res =>this.setState({todos: [...this.state.todos, res.data]}))\n  ;\n;\n  }\n  \n\n\n  render(){\n  \n  return (\n    <Router>\n     <div className=\"App\">\n      <div className= 'container'>\n        <Header />\n            <Route exact path =\"/\" render={props => (\n              <React.Fragment>\n                  <AddTodo addTodo= {this.addTodo} />\n                  <Todos todos={this.state.todos}\n                            markComplete = {this.markComplete}\n                            delTodo = {this.delTodo}/>\n                </React.Fragment>\n            )} />\n           <Route path= \"/about\" component ={About} />\n        </div>\n        </div>\n    </Router>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}